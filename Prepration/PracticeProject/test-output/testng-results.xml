<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="7" passed="6" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-02-29T17:50:33 IST" name="Default suite" finished-at="2024-02-29T17:51:01 IST" duration-ms="27665">
    <groups>
    </groups>
    <test started-at="2024-02-29T17:50:33 IST" name="Default test" finished-at="2024-02-29T17:51:01 IST" duration-ms="27665">
      <class name="practice1.LoginCSV">
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:practice1.LoginCSV@24be2d9c]" started-at="2024-02-29T17:50:33 IST" name="beforeMethod" finished-at="2024-02-29T17:50:33 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="test1()[pri:1, instance:practice1.LoginCSV@24be2d9c]" started-at="2024-02-29T17:50:33 IST" name="test1" finished-at="2024-02-29T17:50:34 IST" duration-ms="625" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:practice1.LoginCSV@24be2d9c]" started-at="2024-02-29T17:50:34 IST" name="afterMethod" finished-at="2024-02-29T17:50:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:practice1.LoginCSV@24be2d9c]" started-at="2024-02-29T17:50:34 IST" name="beforeMethod" finished-at="2024-02-29T17:50:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="test2()[pri:2, instance:practice1.LoginCSV@24be2d9c]" started-at="2024-02-29T17:50:34 IST" name="test2" finished-at="2024-02-29T17:50:37 IST" duration-ms="3428" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="user-name"]"}
  (Session info: chrome=122.0.6261.95)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.16.1', revision: '9b4c83354e'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [6d23481dbc805b2279f43e481e179b1e, findElement {using=xpath, value=//*[@id="user-name"]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 122.0.6261.95, chrome: {chromedriverVersion: 122.0.6261.94 (880dbf29479c..., userDataDir: C:\Users\E010302\AppData\Lo...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:64353}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:64353/devtoo..., se:cdpVersion: 122.0.6261.95, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 6d23481dbc805b2279f43e481e179b1e]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="user-name"]"}
  (Session info: chrome=122.0.6261.95)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.16.1', revision: '9b4c83354e'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [6d23481dbc805b2279f43e481e179b1e, findElement {using=xpath, value=//*[@id="user-name"]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 122.0.6261.95, chrome: {chromedriverVersion: 122.0.6261.94 (880dbf29479c..., userDataDir: C:\Users\E010302\AppData\Lo...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:64353}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:64353/devtoo..., se:cdpVersion: 122.0.6261.95, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 6d23481dbc805b2279f43e481e179b1e
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:52)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:200)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:175)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:523)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:360)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:354)
at practice1.LoginCSV.test2(LoginCSV.java:59)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:practice1.LoginCSV@24be2d9c]" started-at="2024-02-29T17:50:37 IST" name="afterMethod" finished-at="2024-02-29T17:50:37 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="test3()[pri:3, instance:practice1.LoginCSV@24be2d9c]" started-at="2024-02-29T17:50:37 IST" name="test3" finished-at="2024-02-29T17:50:44 IST" duration-ms="6181" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:practice1.LoginCSV@24be2d9c]" started-at="2024-02-29T17:50:37 IST" name="beforeMethod" finished-at="2024-02-29T17:50:37 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:practice1.LoginCSV@24be2d9c]" started-at="2024-02-29T17:50:44 IST" name="beforeMethod" finished-at="2024-02-29T17:50:44 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:practice1.LoginCSV@24be2d9c]" started-at="2024-02-29T17:50:44 IST" name="afterMethod" finished-at="2024-02-29T17:50:44 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="test4()[pri:4, instance:practice1.LoginCSV@24be2d9c]" started-at="2024-02-29T17:50:44 IST" name="test4" finished-at="2024-02-29T17:50:50 IST" duration-ms="6145" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:practice1.LoginCSV@24be2d9c]" started-at="2024-02-29T17:50:50 IST" name="afterMethod" finished-at="2024-02-29T17:50:50 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="test5()[pri:5, instance:practice1.LoginCSV@24be2d9c]" started-at="2024-02-29T17:50:50 IST" name="test5" finished-at="2024-02-29T17:50:53 IST" duration-ms="3094" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test5 -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:practice1.LoginCSV@24be2d9c]" started-at="2024-02-29T17:50:50 IST" name="beforeMethod" finished-at="2024-02-29T17:50:50 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:practice1.LoginCSV@24be2d9c]" started-at="2024-02-29T17:50:53 IST" name="afterMethod" finished-at="2024-02-29T17:50:53 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:practice1.LoginCSV@24be2d9c]" started-at="2024-02-29T17:50:53 IST" name="beforeMethod" finished-at="2024-02-29T17:50:53 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="test6()[pri:6, instance:practice1.LoginCSV@24be2d9c]" started-at="2024-02-29T17:50:53 IST" name="test6" finished-at="2024-02-29T17:50:56 IST" duration-ms="3295" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test6 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:practice1.LoginCSV@24be2d9c]" started-at="2024-02-29T17:50:56 IST" name="afterMethod" finished-at="2024-02-29T17:50:56 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="test7()[pri:7, instance:practice1.LoginCSV@24be2d9c]" started-at="2024-02-29T17:50:56 IST" name="test7" finished-at="2024-02-29T17:51:01 IST" duration-ms="4829" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test7 -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:practice1.LoginCSV@24be2d9c]" started-at="2024-02-29T17:50:56 IST" name="beforeMethod" finished-at="2024-02-29T17:50:56 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:practice1.LoginCSV@24be2d9c]" started-at="2024-02-29T17:51:01 IST" name="afterMethod" finished-at="2024-02-29T17:51:01 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- practice1.LoginCSV -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
